"use strict";var oe=Object.create;var R=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var se=Object.getOwnPropertyNames;var ie=Object.getPrototypeOf,ae=Object.prototype.hasOwnProperty;var L=(e,r)=>()=>(e&&(r=e(e=0)),r);var w=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),D=(e,r)=>{for(var t in r)R(e,t,{get:r[t],enumerable:!0})},U=(e,r,t,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let u of se(r))!ae.call(e,u)&&u!==t&&R(e,u,{get:()=>r[u],enumerable:!(a=ne(r,u))||a.enumerable});return e};var ue=(e,r,t)=>(t=e!=null?oe(ie(e)):{},U(r||!e||!e.__esModule?R(t,"default",{value:e,enumerable:!0}):t,e)),P=e=>U(R({},"__esModule",{value:!0}),e);var F=w((Xe,v)=>{var ce="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";v.exports={urlAlphabet:ce}});var K=w((Ye,H)=>{var $=require("crypto"),{urlAlphabet:B}=F(),Ee=128,A,O,V=e=>{!A||A.length<e?(A=Buffer.allocUnsafe(e*Ee),$.randomFillSync(A),O=0):O+e>A.length&&($.randomFillSync(A),O=0),O+=e},X=e=>(V(e|=0),A.subarray(O-e,O)),Y=(e,r,t)=>{let a=(2<<31-Math.clz32(e.length-1|1))-1,u=Math.ceil(1.6*a*r/e.length);return(c=r)=>{let _="";for(;;){let te=t(u),b=u;for(;b--;)if(_+=e[te[b]&a]||"",_.length===c)return _}}},me=(e,r=21)=>Y(e,r,X),pe=(e=21)=>{V(e|=0);let r="";for(let t=O-e;t<O;t++)r+=B[A[t]&63];return r};H.exports={nanoid:pe,customAlphabet:me,customRandom:Y,urlAlphabet:B,random:X}});var N,l,s,He,g,m,p,S=L(()=>{"use strict";N={DEV:"dev",STAGING:"staging",PROD:"prod"},l=process.env.STAGE||N.DEV,s={TOPICS:process.env.TOPICS_TABLE||`MicroQueue-Topics-${l}`,MESSAGES:process.env.MESSAGES_TABLE||`MicroQueue-Messages-${l}`,CONSUMER_GROUPS:process.env.CONSUMER_GROUPS_TABLE||`MicroQueue-ConsumerGroups-${l}`,OFFSETS:process.env.OFFSETS_TABLE||`MicroQueue-Offsets-${l}`},He={MESSAGES:process.env.MESSAGES_BUCKET||`microqueue-messages-${l}`,ARCHIVE:process.env.ARCHIVE_BUCKET||`microqueue-archive-${l}`},g={MAX_TOPIC_NAME_LENGTH:100,MAX_DESCRIPTION_LENGTH:500,MAX_MESSAGE_SIZE_BYTES:256*1024,MAX_METADATA_KEYS:10,MAX_METADATA_KEY_LENGTH:128,MAX_METADATA_VALUE_LENGTH:256,MAX_RETENTION_HOURS:7*24,DEFAULT_RETENTION_HOURS:24,MAX_MESSAGES_PER_CONSUME:100,DEFAULT_MESSAGES_PER_CONSUME:10,MAX_WAIT_TIME_SECONDS:20,DEFAULT_WAIT_TIME_SECONDS:0},m={INTERNAL_ERROR:"INTERNAL_ERROR",VALIDATION_ERROR:"VALIDATION_ERROR",RESOURCE_NOT_FOUND:"RESOURCE_NOT_FOUND",TOPIC_NOT_FOUND:"TOPIC_NOT_FOUND",TOPIC_ALREADY_EXISTS:"TOPIC_ALREADY_EXISTS",MESSAGE_NOT_FOUND:"MESSAGE_NOT_FOUND",MESSAGE_TOO_LARGE:"MESSAGE_TOO_LARGE",INVALID_MESSAGE_FORMAT:"INVALID_MESSAGE_FORMAT",CONSUMER_GROUP_NOT_FOUND:"CONSUMER_GROUP_NOT_FOUND",CONSUMER_GROUP_ALREADY_EXISTS:"CONSUMER_GROUP_ALREADY_EXISTS",RATE_LIMIT_EXCEEDED:"RATE_LIMIT_EXCEEDED",SERVICE_UNAVAILABLE:"SERVICE_UNAVAILABLE"},p={OK:200,CREATED:201,BAD_REQUEST:400,UNAUTHORIZED:401,FORBIDDEN:403,NOT_FOUND:404,CONFLICT:409,PAYLOAD_TOO_LARGE:413,UNPROCESSABLE_ENTITY:422,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500,SERVICE_UNAVAILABLE:503}});var Z={};D(Z,{config:()=>C,default:()=>_e});var le,W,de,C,_e,M=L(()=>{"use strict";S();le={serviceName:"MicroQueue-Mini",version:"1.0.0",dynamodb:{maxRetries:3,timeout:5e3},s3:{maxRetries:3,timeout:1e4},api:{corsOrigins:"*",rateLimit:{windowMs:60*1e3,max:100}},logging:{level:"info",format:"json"},topics:{maxTopicsPerAccount:100,defaultRetentionHours:g.DEFAULT_RETENTION_HOURS},messages:{maxSizeBytes:g.MAX_MESSAGE_SIZE_BYTES,batchSize:25},consumers:{defaultMaxMessages:g.DEFAULT_MESSAGES_PER_CONSUME,defaultWaitTimeSeconds:g.DEFAULT_WAIT_TIME_SECONDS}},W={[N.DEV]:{logging:{level:"debug"},topics:{maxTopicsPerAccount:20}},[N.STAGING]:{logging:{level:"debug"},topics:{maxTopicsPerAccount:50}},[N.PROD]:{logging:{level:"info"},topics:{maxTopicsPerAccount:100},api:{rateLimit:{windowMs:60*1e3,max:200}}}},de=W[l]||W[N.DEV],C={...le,...de,env:l},_e=C});var Be={};D(Be,{handler:()=>$e});module.exports=P(Be);var j=ue(K());S();S();var E=class extends Error{constructor(t,a,u,c){super(a);this.code=t,this.statusCode=u,this.details=c,this.name="AppError",Error.captureStackTrace&&Error.captureStackTrace(this,E)}toResponse(){return{success:!1,error:{code:this.code,message:this.message,details:this.details}}}},n={internalError:(e="An internal server error occurred",r)=>new E(m.INTERNAL_ERROR,e,p.INTERNAL_SERVER_ERROR,r),validationError:(e="Validation error",r)=>new E(m.VALIDATION_ERROR,e,p.BAD_REQUEST,r),resourceNotFound:(e,r)=>new E(m.RESOURCE_NOT_FOUND,`${e} with id '${r}' not found`,p.NOT_FOUND),topicNotFound:e=>new E(m.TOPIC_NOT_FOUND,`Topic '${e}' not found`,p.NOT_FOUND),topicAlreadyExists:e=>new E(m.TOPIC_ALREADY_EXISTS,`Topic with name '${e}' already exists`,p.CONFLICT),messageNotFound:e=>new E(m.MESSAGE_NOT_FOUND,`Message '${e}' not found`,p.NOT_FOUND),messageTooLarge:(e,r)=>new E(m.MESSAGE_TOO_LARGE,`Message size (${e} bytes) exceeds maximum allowed size (${r} bytes)`,p.PAYLOAD_TOO_LARGE),consumerGroupNotFound:e=>new E(m.CONSUMER_GROUP_NOT_FOUND,`Consumer group '${e}' not found`,p.NOT_FOUND),consumerGroupAlreadyExists:(e,r)=>new E(m.CONSUMER_GROUP_ALREADY_EXISTS,`Consumer group with name '${e}' already exists for topic '${r}'`,p.CONFLICT),rateLimitExceeded:()=>new E(m.RATE_LIMIT_EXCEEDED,"Rate limit exceeded",p.TOO_MANY_REQUESTS),serviceUnavailable:(e="Service temporarily unavailable")=>new E(m.SERVICE_UNAVAILABLE,e,p.SERVICE_UNAVAILABLE)},Q=e=>{if(console.error("Error:",e),e instanceof E)return{statusCode:e.statusCode,body:JSON.stringify(e.toResponse()),headers:{"Content-Type":"application/json"}};if(e.code==="ConditionalCheckFailedException"){let t=n.resourceNotFound("Resource","unknown");return{statusCode:t.statusCode,body:JSON.stringify(t.toResponse()),headers:{"Content-Type":"application/json"}}}if(e.code==="ThrottlingException"){let t=n.rateLimitExceeded();return{statusCode:t.statusCode,body:JSON.stringify(t.toResponse()),headers:{"Content-Type":"application/json"}}}let r=n.internalError(e.message||"An unexpected error occurred");return{statusCode:r.statusCode,body:JSON.stringify(r.toResponse()),headers:{"Content-Type":"application/json"}}};var ge=(e,r=16)=>{let t=(0,j.nanoid)(r);return e?`${e}_${t}`:t};var k=()=>ge("consumer");var Te=e=>({success:!0,data:e}),J=(e,r=200)=>({statusCode:r,body:JSON.stringify(Te(e)),headers:{"Content-Type":"application/json"}});var q=e=>{if(!e)throw n.validationError("Request body is required");try{return JSON.parse(e)}catch{throw n.validationError("Invalid JSON in request body")}};S();var z=require("aws-sdk");M();var ee={maxRetries:C.dynamodb.maxRetries,httpOptions:{timeout:C.dynamodb.timeout}};process.env.DYNAMODB_ENDPOINT&&(ee.endpoint=process.env.DYNAMODB_ENDPOINT);var i=new z.DynamoDB.DocumentClient(ee);S();var f=(M(),P(Z));var Ae={error:0,warn:1,info:2,debug:3},x=Ae[f.logging.level]||2,y=(e,r,t)=>{let a=new Date().toISOString(),u=process.env.AWS_REQUEST_ID||"-";if(f.logging.format==="json"){let _={timestamp:a,level:e,message:r,requestId:u,service:f.serviceName,version:f.version,env:f.env,...t?{data:t}:{}};return JSON.stringify(_)}let c=`[${a}] [${e.toUpperCase()}] [${u}] ${r}`;return t&&(c+=` ${JSON.stringify(t)}`),c},I=class{error(r,t){x>=0&&console.error(y("error",r,t))}warn(r,t){x>=1&&console.warn(y("warn",r,t))}info(r,t){x>=2&&console.info(y("info",r,t))}debug(r,t){x>=3&&console.debug(y("debug",r,t))}},o=new I,T=o;var Oe=async e=>{o.debug("Creating consumer group",{groupId:e.groupId,topicId:e.topicId});try{return await i.put({TableName:s.CONSUMER_GROUPS,Item:e,ConditionExpression:"attribute_not_exists(groupId) AND attribute_not_exists(topicId)"}).promise(),e}catch(r){throw o.error("Error creating consumer group",{error:r,consumerGroup:e}),r.code==="ConditionalCheckFailedException"?n.consumerGroupAlreadyExists(e.name,e.topicId):r}},Se=async(e,r)=>{o.debug("Getting consumer group",{groupId:e,topicId:r});try{let t=await i.get({TableName:s.CONSUMER_GROUPS,Key:{groupId:e,topicId:r}}).promise();if(!t.Item)throw n.consumerGroupNotFound(e);return t.Item}catch(t){throw o.error("Error getting consumer group",{error:t,groupId:e,topicId:r}),t.code==="ResourceNotFoundException"?n.consumerGroupNotFound(e):t}},Ne=async(e,r)=>{o.debug("Getting consumer group by name",{name:e,topicId:r});try{let t=await i.scan({TableName:s.CONSUMER_GROUPS,FilterExpression:"#name = :name AND topicId = :topicId",ExpressionAttributeNames:{"#name":"name"},ExpressionAttributeValues:{":name":e,":topicId":r},Limit:1}).promise();return t.Items&&t.Items.length>0?t.Items[0]:null}catch(t){throw o.error("Error getting consumer group by name",{error:t,name:e,topicId:r}),t}},Ce=async e=>{o.debug("Listing consumer groups",{topicId:e});try{return(await i.query({TableName:s.CONSUMER_GROUPS,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e}}).promise()).Items||[]}catch(r){throw o.error("Error listing consumer groups",{error:r,topicId:e}),r}},fe=async(e,r)=>{o.debug("Deleting consumer group",{groupId:e,topicId:r});try{await i.delete({TableName:s.CONSUMER_GROUPS,Key:{groupId:e,topicId:r},ConditionExpression:"attribute_exists(groupId) AND attribute_exists(topicId)"}).promise(),await i.delete({TableName:s.OFFSETS,Key:{groupId:e,topicId:r}}).promise()}catch(t){throw o.error("Error deleting consumer group",{error:t,groupId:e,topicId:r}),t.code==="ConditionalCheckFailedException"?n.consumerGroupNotFound(e):t}},Re=async(e,r,t)=>{o.debug("Updating consumer group timestamp",{groupId:e,topicId:r,timestamp:t});try{await i.update({TableName:s.CONSUMER_GROUPS,Key:{groupId:e,topicId:r},UpdateExpression:"SET lastConsumedTimestamp = :ts",ExpressionAttributeValues:{":ts":t},ConditionExpression:"attribute_exists(groupId) AND attribute_exists(topicId)"}).promise()}catch(a){throw o.error("Error updating consumer group timestamp",{error:a,groupId:e,topicId:r}),a.code==="ConditionalCheckFailedException"?n.consumerGroupNotFound(e):a}},xe=async(e,r)=>{o.debug("Getting consumer offset",{groupId:e,topicId:r});try{let t=await i.get({TableName:s.OFFSETS,Key:{groupId:e,topicId:r}}).promise();return t.Item?t.Item:null}catch(t){throw o.error("Error getting consumer offset",{error:t,groupId:e,topicId:r}),t}},ye=async e=>{o.debug("Updating consumer offset",{groupId:e.groupId,topicId:e.topicId,sequenceNumber:e.lastSequenceNumber});try{await i.put({TableName:s.OFFSETS,Item:e}).promise()}catch(r){throw o.error("Error updating consumer offset",{error:r,offset:e}),r}},d={createConsumerGroup:Oe,getConsumerGroup:Se,getConsumerGroupByName:Ne,listConsumerGroups:Ce,deleteConsumerGroup:fe,updateConsumerGroupTimestamp:Re,getConsumerOffset:xe,updateConsumerOffset:ye};S();var Me=async e=>{o.debug("Creating topic",{topicId:e.topicId});try{return await i.put({TableName:s.TOPICS,Item:e,ConditionExpression:"attribute_not_exists(topicId)"}).promise(),e}catch(r){throw o.error("Error creating topic",{error:r,topic:e}),r.code==="ConditionalCheckFailedException"?n.topicAlreadyExists(e.name):r}},G=async e=>{o.debug("Getting topic",{topicId:e});try{let r=await i.get({TableName:s.TOPICS,Key:{topicId:e}}).promise();if(!r.Item)throw n.topicNotFound(e);return r.Item}catch(r){throw o.error("Error getting topic",{error:r,topicId:e}),r.code==="ResourceNotFoundException"?n.topicNotFound(e):r}},Ie=async e=>{o.debug("Getting topic by name",{name:e});try{let r=await i.scan({TableName:s.TOPICS,FilterExpression:"#name = :name",ExpressionAttributeNames:{"#name":"name"},ExpressionAttributeValues:{":name":e},Limit:1}).promise();return r.Items&&r.Items.length>0?r.Items[0]:null}catch(r){throw o.error("Error getting topic by name",{error:r,name:e}),r}},Ge=async()=>{o.debug("Listing topics");try{return(await i.scan({TableName:s.TOPICS}).promise()).Items||[]}catch(e){throw o.error("Error listing topics",{error:e}),e}},he=async e=>{o.debug("Deleting topic",{topicId:e});try{await i.delete({TableName:s.TOPICS,Key:{topicId:e},ConditionExpression:"attribute_exists(topicId)"}).promise()}catch(r){throw o.error("Error deleting topic",{error:r,topicId:e}),r.code==="ConditionalCheckFailedException"?n.topicNotFound(e):r}},be=async(e,r)=>{o.debug("Incrementing topic message count",{topicId:e,timestamp:r});try{await i.update({TableName:s.TOPICS,Key:{topicId:e},UpdateExpression:"SET messageCount = messageCount + :inc, lastMessageTimestamp = :ts",ExpressionAttributeValues:{":inc":1,":ts":r},ConditionExpression:"attribute_exists(topicId)"}).promise()}catch(t){throw o.error("Error incrementing message count",{error:t,topicId:e}),t.code==="ConditionalCheckFailedException"?n.topicNotFound(e):t}},Le=async(e,r)=>{o.debug("Updating topic",{topicId:e,updates:r});let t=[],a={},u={};if(Object.entries(r).forEach(([c,_])=>{_!==void 0&&(t.push(`#${c} = :${c}`),a[`#${c}`]=c,u[`:${c}`]=_)}),t.length===0)return G(e);try{return await i.update({TableName:s.TOPICS,Key:{topicId:e},UpdateExpression:`SET ${t.join(", ")}`,ExpressionAttributeNames:a,ExpressionAttributeValues:u,ConditionExpression:"attribute_exists(topicId)",ReturnValues:"NONE"}).promise(),G(e)}catch(c){throw o.error("Error updating topic",{error:c,topicId:e}),c.code==="ConditionalCheckFailedException"?n.topicNotFound(e):c}},h={createTopic:Me,getTopic:G,getTopicByName:Ie,listTopics:Ge,deleteTopic:he,incrementMessageCount:be,updateTopic:Le};var we=async e=>{if(T.debug("Creating consumer group",{request:e}),!e.name)throw n.validationError("Consumer group name is required");if(e.name.length>g.MAX_TOPIC_NAME_LENGTH)throw n.validationError(`Consumer group name cannot exceed ${g.MAX_TOPIC_NAME_LENGTH} characters`);if(e.description&&e.description.length>g.MAX_DESCRIPTION_LENGTH)throw n.validationError(`Consumer group description cannot exceed ${g.MAX_DESCRIPTION_LENGTH} characters`);if(await h.getTopic(e.topicId),await d.getConsumerGroupByName(e.name,e.topicId))throw n.consumerGroupAlreadyExists(e.name,e.topicId);let t={groupId:k(),topicId:e.topicId,name:e.name,description:e.description,createdAt:Date.now()};return d.createConsumerGroup(t)},De=async(e,r)=>(T.debug("Getting consumer group",{groupId:e,topicId:r}),d.getConsumerGroup(e,r)),Ue=async e=>(T.debug("Listing consumer groups",{topicId:e}),await h.getTopic(e),d.listConsumerGroups(e)),Pe=async(e,r)=>(T.debug("Deleting consumer group",{groupId:e,topicId:r}),d.deleteConsumerGroup(e,r)),ve=async(e,r)=>(T.debug("Getting consumer offset",{groupId:e,topicId:r}),d.getConsumerOffset(e,r)),Fe=async(e,r)=>{T.debug("Resetting consumer group offset",{groupId:e,topicId:r}),await d.getConsumerGroup(e,r),await d.updateConsumerOffset({groupId:e,topicId:r,lastSequenceNumber:0,lastConsumedTimestamp:Date.now()})},re={createConsumerGroup:we,getConsumerGroup:De,listConsumerGroups:Ue,deleteConsumerGroup:Pe,getConsumerOffset:ve,resetConsumerGroupOffset:Fe};var $e=async e=>{try{T.debug("Create consumer group request",{event:e});let r=q(e.body),t=await re.createConsumerGroup(r);return J(t,201)}catch(r){return T.error("Error creating consumer group",{error:r}),Q(r)}};0&&(module.exports={handler});
//# sourceMappingURL=create.js.map
