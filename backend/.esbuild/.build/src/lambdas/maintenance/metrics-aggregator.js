"use strict";var ue=Object.create;var D=Object.defineProperty;var le=Object.getOwnPropertyDescriptor;var pe=Object.getOwnPropertyNames;var me=Object.getPrototypeOf,Ee=Object.prototype.hasOwnProperty;var W=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),de=(e,t)=>{for(var o in t)D(e,o,{get:t[o],enumerable:!0})},z=(e,t,o,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of pe(t))!Ee.call(e,n)&&n!==o&&D(e,n,{get:()=>t[n],enumerable:!(r=le(t,n))||r.enumerable});return e};var F=(e,t,o)=>(o=e!=null?ue(me(e)):{},z(t||!e||!e.__esModule?D(o,"default",{value:e,enumerable:!0}):o,e)),ge=e=>z(D({},"__esModule",{value:!0}),e);var Q=W((Je,Te)=>{Te.exports={name:"dotenv",version:"16.4.7",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard",pretest:"npm run lint && npm run dts-check",test:"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^18.11.3",decache:"^4.6.2",sinon:"^14.0.1",standard:"^17.0.0","standard-version":"^9.5.0",tap:"^19.2.0",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var K=W((Ze,_)=>{var G=require("fs"),$=require("path"),Ne=require("os"),Se=require("crypto"),_e=Q(),B=_e.version,Oe=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function fe(e){let t={},o=e.toString();o=o.replace(/\r\n?/mg,`
`);let r;for(;(r=Oe.exec(o))!=null;){let n=r[1],s=r[2]||"";s=s.trim();let i=s[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),i==='"'&&(s=s.replace(/\\n/g,`
`),s=s.replace(/\\r/g,"\r")),t[n]=s}return t}function Ae(e){let t=Z(e),o=p.configDotenv({path:t});if(!o.parsed){let i=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw i.code="MISSING_DATA",i}let r=J(e).split(","),n=r.length,s;for(let i=0;i<n;i++)try{let a=r[i].trim(),m=he(o,a);s=p.decrypt(m.ciphertext,m.key);break}catch(a){if(i+1>=n)throw a}return p.parse(s)}function Re(e){console.log(`[dotenv@${B}][INFO] ${e}`)}function Ce(e){console.log(`[dotenv@${B}][WARN] ${e}`)}function b(e){console.log(`[dotenv@${B}][DEBUG] ${e}`)}function J(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function he(e,t){let o;try{o=new URL(t)}catch(a){if(a.code==="ERR_INVALID_URL"){let m=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw m.code="INVALID_DOTENV_KEY",m}throw a}let r=o.password;if(!r){let a=new Error("INVALID_DOTENV_KEY: Missing key part");throw a.code="INVALID_DOTENV_KEY",a}let n=o.searchParams.get("environment");if(!n){let a=new Error("INVALID_DOTENV_KEY: Missing environment part");throw a.code="INVALID_DOTENV_KEY",a}let s=`DOTENV_VAULT_${n.toUpperCase()}`,i=e.parsed[s];if(!i){let a=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw a.code="NOT_FOUND_DOTENV_ENVIRONMENT",a}return{ciphertext:i,key:r}}function Z(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let o of e.path)G.existsSync(o)&&(t=o.endsWith(".vault")?o:`${o}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=$.resolve(process.cwd(),".env.vault");return G.existsSync(t)?t:null}function H(e){return e[0]==="~"?$.join(Ne.homedir(),e.slice(1)):e}function Ie(e){Re("Loading env from encrypted .env.vault");let t=p._parseVault(e),o=process.env;return e&&e.processEnv!=null&&(o=e.processEnv),p.populate(o,t,e),{parsed:t}}function Me(e){let t=$.resolve(process.cwd(),".env"),o="utf8",r=Boolean(e&&e.debug);e&&e.encoding?o=e.encoding:r&&b("No encoding is specified. UTF-8 is used by default");let n=[t];if(e&&e.path)if(!Array.isArray(e.path))n=[H(e.path)];else{n=[];for(let m of e.path)n.push(H(m))}let s,i={};for(let m of n)try{let N=p.parse(G.readFileSync(m,{encoding:o}));p.populate(i,N,e)}catch(N){r&&b(`Failed to load ${m} ${N.message}`),s=N}let a=process.env;return e&&e.processEnv!=null&&(a=e.processEnv),p.populate(a,i,e),s?{parsed:i,error:s}:{parsed:i}}function ye(e){if(J(e).length===0)return p.configDotenv(e);let t=Z(e);return t?p._configVault(e):(Ce(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),p.configDotenv(e))}function ve(e,t){let o=Buffer.from(t.slice(-64),"hex"),r=Buffer.from(e,"base64"),n=r.subarray(0,12),s=r.subarray(-16);r=r.subarray(12,-16);try{let i=Se.createDecipheriv("aes-256-gcm",o,n);return i.setAuthTag(s),`${i.update(r)}${i.final()}`}catch(i){let a=i instanceof RangeError,m=i.message==="Invalid key length",N=i.message==="Unsupported state or unable to authenticate data";if(a||m){let S=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw S.code="INVALID_DOTENV_KEY",S}else if(N){let S=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw S.code="DECRYPTION_FAILED",S}else throw i}}function De(e,t,o={}){let r=Boolean(o&&o.debug),n=Boolean(o&&o.override);if(typeof t!="object"){let s=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw s.code="OBJECT_REQUIRED",s}for(let s of Object.keys(t))Object.prototype.hasOwnProperty.call(e,s)?(n===!0&&(e[s]=t[s]),r&&b(n===!0?`"${s}" is already defined and WAS overwritten`:`"${s}" is already defined and was NOT overwritten`)):e[s]=t[s]}var p={configDotenv:Me,_configVault:Ie,_parseVault:Ae,config:ye,decrypt:ve,parse:fe,populate:De};_.exports.configDotenv=p.configDotenv;_.exports._configVault=p._configVault;_.exports._parseVault=p._parseVault;_.exports.config=p.config;_.exports.decrypt=p.decrypt;_.exports.parse=p.parse;_.exports.populate=p.populate;_.exports=p});var Qe={};de(Qe,{handler:()=>ze});module.exports=ge(Qe);var ee=require("aws-sdk"),te=F(K());te.config();var oe={region:process.env.AWS_REGION||"us-east-1",maxRetries:3,httpOptions:{timeout:5e3},...process.env.IS_LOCAL&&{accessKeyId:"localstack",secretAccessKey:"localstack"}};process.env.DYNAMODB_ENDPOINT&&(console.log(`Using local DynamoDB endpoint: ${process.env.DYNAMODB_ENDPOINT}`),oe.endpoint=process.env.DYNAMODB_ENDPOINT);var c=new ee.DynamoDB.DocumentClient(oe);var be={DEV:"dev",STAGING:"staging",PROD:"prod"},I=process.env.STAGE||be.DEV,u={TOPICS:process.env.TOPICS_TABLE||`MicroQueue-Topics-${I}`,MESSAGES:process.env.MESSAGES_TABLE||`MicroQueue-Messages-${I}`,CONSUMER_GROUPS:process.env.CONSUMER_GROUPS_TABLE||`MicroQueue-ConsumerGroups-${I}`,OFFSETS:process.env.OFFSETS_TABLE||`MicroQueue-Offsets-${I}`},tt={MESSAGES:process.env.MESSAGES_BUCKET||`microqueue-messages-${I}`,ARCHIVE:process.env.ARCHIVE_BUCKET||`microqueue-archive-${I}`},ot={MAX_TOPIC_NAME_LENGTH:100,MAX_DESCRIPTION_LENGTH:500,MAX_MESSAGE_SIZE_BYTES:256*1024,MAX_METADATA_KEYS:10,MAX_METADATA_KEY_LENGTH:128,MAX_METADATA_VALUE_LENGTH:256,MAX_RETENTION_HOURS:7*24,DEFAULT_RETENTION_HOURS:24,MAX_MESSAGES_PER_CONSUME:100,DEFAULT_MESSAGES_PER_CONSUME:10,MAX_WAIT_TIME_SECONDS:20,DEFAULT_WAIT_TIME_SECONDS:0},d={INTERNAL_ERROR:"INTERNAL_ERROR",VALIDATION_ERROR:"VALIDATION_ERROR",RESOURCE_NOT_FOUND:"RESOURCE_NOT_FOUND",TOPIC_NOT_FOUND:"TOPIC_NOT_FOUND",TOPIC_ALREADY_EXISTS:"TOPIC_ALREADY_EXISTS",MESSAGE_NOT_FOUND:"MESSAGE_NOT_FOUND",MESSAGE_TOO_LARGE:"MESSAGE_TOO_LARGE",INVALID_MESSAGE_FORMAT:"INVALID_MESSAGE_FORMAT",CONSUMER_GROUP_NOT_FOUND:"CONSUMER_GROUP_NOT_FOUND",CONSUMER_GROUP_ALREADY_EXISTS:"CONSUMER_GROUP_ALREADY_EXISTS",RATE_LIMIT_EXCEEDED:"RATE_LIMIT_EXCEEDED",SERVICE_UNAVAILABLE:"SERVICE_UNAVAILABLE"},g={OK:200,CREATED:201,BAD_REQUEST:400,UNAUTHORIZED:401,FORBIDDEN:403,NOT_FOUND:404,CONFLICT:409,PAYLOAD_TOO_LARGE:413,UNPROCESSABLE_ENTITY:422,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500,SERVICE_UNAVAILABLE:503};var se=F(K());se.config();var xe={error:0,warn:1,info:2,debug:3},we=process.env.LOG_LEVEL||"info",Ue=process.env.LOG_FORMAT||"json",x=xe[we]||2,w=(e,t,o)=>{let r=new Date().toISOString(),n=process.env.AWS_REQUEST_ID||"-";if(Ue==="json"){let i={timestamp:r,level:e,message:t,requestId:n,service:"MicroQueue-Mini",version:"1.0.0",env:process.env.STAGE||"dev",...o?{data:o}:{}};return JSON.stringify(i)}let s=`[${r}] [${e.toUpperCase()}] [${n}] ${t}`;return o&&(s+=` ${JSON.stringify(o)}`),s},Y=class{error(t,o){x>=0&&console.error(w("error",t,o))}warn(t,o){x>=1&&console.warn(w("warn",t,o))}info(t,o){x>=2&&console.info(w("info",t,o))}debug(t,o){x>=3&&console.debug(w("debug",t,o))}},l=new Y,T=l;var E=class extends Error{constructor(o,r,n,s){super(r);this.code=o,this.statusCode=n,this.details=s,this.name="AppError",Error.captureStackTrace&&Error.captureStackTrace(this,E)}toResponse(){return{success:!1,error:{code:this.code,message:this.message,details:this.details}}}},O={internalError:(e="An internal server error occurred",t)=>new E(d.INTERNAL_ERROR,e,g.INTERNAL_SERVER_ERROR,t),validationError:(e="Validation error",t)=>new E(d.VALIDATION_ERROR,e,g.BAD_REQUEST,t),resourceNotFound:(e,t)=>new E(d.RESOURCE_NOT_FOUND,`${e} with id '${t}' not found`,g.NOT_FOUND),topicNotFound:e=>new E(d.TOPIC_NOT_FOUND,`Topic '${e}' not found`,g.NOT_FOUND),topicAlreadyExists:e=>new E(d.TOPIC_ALREADY_EXISTS,`Topic with name '${e}' already exists`,g.CONFLICT),messageNotFound:e=>new E(d.MESSAGE_NOT_FOUND,`Message '${e}' not found`,g.NOT_FOUND),messageTooLarge:(e,t)=>new E(d.MESSAGE_TOO_LARGE,`Message size (${e} bytes) exceeds maximum allowed size (${t} bytes)`,g.PAYLOAD_TOO_LARGE),consumerGroupNotFound:e=>new E(d.CONSUMER_GROUP_NOT_FOUND,`Consumer group '${e}' not found`,g.NOT_FOUND),consumerGroupAlreadyExists:(e,t)=>new E(d.CONSUMER_GROUP_ALREADY_EXISTS,`Consumer group with name '${e}' already exists for topic '${t}'`,g.CONFLICT),rateLimitExceeded:()=>new E(d.RATE_LIMIT_EXCEEDED,"Rate limit exceeded",g.TOO_MANY_REQUESTS),serviceUnavailable:(e="Service temporarily unavailable")=>new E(d.SERVICE_UNAVAILABLE,e,g.SERVICE_UNAVAILABLE)};var re=F(require("aws-sdk")),Le=new re.default.CloudWatch,Ve=async e=>{l.debug("Calculating topic metrics",{topicId:e});try{let t=await c.get({TableName:u.TOPICS,Key:{topicId:e}}).promise();if(!t.Item)throw O.topicNotFound(e);let o=t.Item,r=Date.now()-60*60*1e3,i=((await c.query({TableName:u.MESSAGES,KeyConditionExpression:"topicId = :topicId AND sequenceNumber > :seq",FilterExpression:"#ts >= :ts",ExpressionAttributeNames:{"#ts":"timestamp"},ExpressionAttributeValues:{":topicId":e,":seq":0,":ts":r},Select:"COUNT"}).promise()).Count||0)/60,m=((await c.query({TableName:u.MESSAGES,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e},Limit:100,ScanIndexForward:!1,ProjectionExpression:"size"}).promise()).Items||[]).map(C=>C.size||0),N=m.reduce((C,V)=>C+V,0),S=m.length>0?Math.round(N/m.length):0,y=await c.query({TableName:u.MESSAGES,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e},Limit:1,ScanIndexForward:!0,ProjectionExpression:"timestamp"}).promise(),A=await c.query({TableName:u.MESSAGES,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e},Limit:1,ScanIndexForward:!1,ProjectionExpression:"timestamp"}).promise(),U=y.Items&&y.Items.length>0?y.Items[0].timestamp:0,v=A.Items&&A.Items.length>0?A.Items[0].timestamp:0,R=(await c.query({TableName:u.CONSUMER_GROUPS,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e}}).promise()).Items||[],f=0;for(let C of R){let V=C.groupId,P=await c.get({TableName:u.OFFSETS,Key:{groupId:V,topicId:e}}).promise();if(P.Item){let X=P.Item.lastConsumedTimestamp||0,ae=P.Item.lastSequenceNumber||0;if(X>r){let ce=ae,q=(X-o.createdAt)/(60*60*1e3);q>0&&(f+=ce/(q*60))}}}let L=R.length>0?f/R.length:0;return{topicId:e,name:o.name,messageCount:o.messageCount||0,publishRate:i,consumeRate:L,averageMessageSize:S,oldestMessage:U,newestMessage:v}}catch(t){throw l.error("Error calculating topic metrics",{error:t,topicId:e}),t}},Pe=async()=>{l.debug("Calculating system metrics");try{let[e,t,o]=await Promise.all([c.scan({TableName:u.TOPICS,Select:"COUNT"}).promise(),c.scan({TableName:u.MESSAGES,Select:"COUNT"}).promise(),c.scan({TableName:u.CONSUMER_GROUPS,Select:"COUNT"}).promise()]),r=e.Count||0,n=t.Count||0,s=o.Count||0,i=Date.now()-60*60*1e3,N=((await c.scan({TableName:u.MESSAGES,FilterExpression:"#ts >= :ts",ExpressionAttributeNames:{"#ts":"timestamp"},ExpressionAttributeValues:{":ts":i},Select:"COUNT"}).promise()).Count||0)/60,S=0,A=(await c.scan({TableName:u.OFFSETS,Limit:100}).promise()).Items||[];for(let f of A)f.lastConsumedTimestamp>i&&(S+=f.lastSequenceNumber||0);let U=A.length>0?S/A.length/60:0,v=0,R=((await c.scan({TableName:u.MESSAGES,Limit:100,ProjectionExpression:"size"}).promise()).Items||[]).map(f=>f.size||0);return R.length>0&&(v=R.reduce((L,C)=>L+C,0)/R.length*n),{totalTopics:r,totalMessages:n,totalConsumerGroups:s,averagePublishRate:N,averageConsumeRate:U,storageUsed:v}}catch(e){throw l.error("Error calculating system metrics",{error:e}),e}},Fe=async(e=[],t)=>{try{let o=new Date,r=[];for(let s of e)r.push({MetricName:"MessageCount",Dimensions:[{Name:"TopicId",Value:s.topicId},{Name:"TopicName",Value:s.name}],Value:s.messageCount,Timestamp:o,Unit:"Count"},{MetricName:"PublishRate",Dimensions:[{Name:"TopicId",Value:s.topicId},{Name:"TopicName",Value:s.name}],Value:s.publishRate,Timestamp:o,Unit:"Count/Minute"},{MetricName:"ConsumeRate",Dimensions:[{Name:"TopicId",Value:s.topicId},{Name:"TopicName",Value:s.name}],Value:s.consumeRate,Timestamp:o,Unit:"Count/Minute"},{MetricName:"AverageMessageSize",Dimensions:[{Name:"TopicId",Value:s.topicId},{Name:"TopicName",Value:s.name}],Value:s.averageMessageSize,Timestamp:o,Unit:"Bytes"});t&&r.push({MetricName:"TotalTopics",Value:t.totalTopics,Timestamp:o,Unit:"Count"},{MetricName:"TotalMessages",Value:t.totalMessages,Timestamp:o,Unit:"Count"},{MetricName:"TotalConsumerGroups",Value:t.totalConsumerGroups,Timestamp:o,Unit:"Count"},{MetricName:"AveragePublishRate",Value:t.averagePublishRate,Timestamp:o,Unit:"Count/Minute"},{MetricName:"AverageConsumeRate",Value:t.averageConsumeRate,Timestamp:o,Unit:"Count/Minute"},{MetricName:"StorageUsed",Value:t.storageUsed,Timestamp:o,Unit:"Bytes"});let n=20;for(let s=0;s<r.length;s+=n){let i=r.slice(s,s+n);await Le.putMetricData({Namespace:"MicroQueue",MetricData:i}).promise()}}catch(o){l.error("Error pushing metrics to CloudWatch",{error:o})}},h={calculateTopicMetrics:Ve,calculateSystemMetrics:Pe,pushMetricsToCloudWatch:Fe};var Ge=async e=>{l.debug("Creating topic",{topicId:e.topicId});try{return await c.put({TableName:u.TOPICS,Item:e,ConditionExpression:"attribute_not_exists(topicId)"}).promise(),e}catch(t){throw l.error("Error creating topic",{error:t,topic:e}),t.code==="ConditionalCheckFailedException"?O.topicAlreadyExists(e.name):t}},j=async e=>{l.debug("Getting topic",{topicId:e});try{let t=await c.get({TableName:u.TOPICS,Key:{topicId:e}}).promise();if(!t.Item)throw O.topicNotFound(e);return t.Item}catch(t){throw l.error("Error getting topic",{error:t,topicId:e}),t.code==="ResourceNotFoundException"?O.topicNotFound(e):t}},$e=async e=>{l.debug("Getting topic by name",{name:e});try{let t=await c.scan({TableName:u.TOPICS,FilterExpression:"#name = :name",ExpressionAttributeNames:{"#name":"name"},ExpressionAttributeValues:{":name":e},Limit:1}).promise();return t.Items&&t.Items.length>0?t.Items[0]:null}catch(t){throw l.error("Error getting topic by name",{error:t,name:e}),t}},Be=async()=>{l.debug("Listing topics");try{return(await c.scan({TableName:u.TOPICS}).promise()).Items||[]}catch(e){throw l.error("Error listing topics",{error:e}),e}},Ke=async e=>{l.debug("Deleting topic",{topicId:e});try{await c.delete({TableName:u.TOPICS,Key:{topicId:e},ConditionExpression:"attribute_exists(topicId)"}).promise()}catch(t){throw l.error("Error deleting topic",{error:t,topicId:e}),t.code==="ConditionalCheckFailedException"?O.topicNotFound(e):t}},Ye=async(e,t)=>{l.debug("Incrementing topic message count",{topicId:e,timestamp:t});try{await c.update({TableName:u.TOPICS,Key:{topicId:e},UpdateExpression:"SET messageCount = messageCount + :inc, lastMessageTimestamp = :ts",ExpressionAttributeValues:{":inc":1,":ts":t},ConditionExpression:"attribute_exists(topicId)"}).promise()}catch(o){throw l.error("Error incrementing message count",{error:o,topicId:e}),o.code==="ConditionalCheckFailedException"?O.topicNotFound(e):o}},je=async(e,t)=>{l.debug("Updating topic",{topicId:e,updates:t});let o=[],r={},n={};if(Object.entries(t).forEach(([s,i])=>{i!==void 0&&(o.push(`#${s} = :${s}`),r[`#${s}`]=s,n[`:${s}`]=i)}),o.length===0)return j(e);try{return await c.update({TableName:u.TOPICS,Key:{topicId:e},UpdateExpression:`SET ${o.join(", ")}`,ExpressionAttributeNames:r,ExpressionAttributeValues:n,ConditionExpression:"attribute_exists(topicId)",ReturnValues:"NONE"}).promise(),j(e)}catch(s){throw l.error("Error updating topic",{error:s,topicId:e}),s.code==="ConditionalCheckFailedException"?O.topicNotFound(e):s}},M={createTopic:Ge,getTopic:j,getTopicByName:$e,listTopics:Be,deleteTopic:Ke,incrementMessageCount:Ye,updateTopic:je};var ke=async e=>(T.debug("Getting topic metrics",{topicId:e}),await M.getTopic(e),h.calculateTopicMetrics(e)),Xe=async()=>{T.debug("Getting all topic metrics");let t=(await M.listTopics()).map(o=>h.calculateTopicMetrics(o.topicId));return Promise.all(t)},k=async()=>(T.debug("Getting system metrics"),h.calculateSystemMetrics()),qe=async()=>{T.debug("Collecting and publishing metrics");try{let e=await k(),o=(await M.listTopics()).slice(0,10),r=await Promise.all(o.map(n=>h.calculateTopicMetrics(n.topicId)));await h.pushMetricsToCloudWatch(r,e),T.info("Metrics published successfully")}catch(e){T.error("Error collecting and publishing metrics",{error:e})}},We=async()=>{T.debug("Getting dashboard metrics");let e=await k(),o=(await M.listTopics()).slice(0,20),r=await Promise.all(o.map(n=>h.calculateTopicMetrics(n.topicId)));return r.sort((n,s)=>s.messageCount-n.messageCount),{system:e,topics:r}},ne={getTopicMetrics:ke,getAllTopicMetrics:Xe,getSystemMetrics:k,collectAndPublishMetrics:qe,getDashboardMetrics:We};var ze=async(e,t)=>{T.info("Starting metrics aggregation",{event:e});try{return await ne.collectAndPublishMetrics(),T.info("Metrics aggregation completed"),{success:!0}}catch(o){return T.error("Error during metrics aggregation",{error:o}),{success:!1}}};0&&(module.exports={handler});
//# sourceMappingURL=metrics-aggregator.js.map
