"use strict";var de=Object.create;var w=Object.defineProperty;var le=Object.getOwnPropertyDescriptor;var Te=Object.getOwnPropertyNames;var Se=Object.getPrototypeOf,Ae=Object.prototype.hasOwnProperty;var $=(e,t)=>()=>(e&&(t=e(e=0)),t);var V=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),K=(e,t)=>{for(var r in t)w(e,r,{get:t[r],enumerable:!0})},X=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Te(t))!Ae.call(e,i)&&i!==r&&w(e,i,{get:()=>t[i],enumerable:!(s=le(t,i))||s.enumerable});return e};var Ne=(e,t,r)=>(r=e!=null?de(Se(e)):{},X(t||!e||!e.__esModule?w(r,"default",{value:e,enumerable:!0}):r,e)),q=e=>X(w({},"__esModule",{value:!0}),e);var H=V((ot,Y)=>{var _e="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";Y.exports={urlAlphabet:_e}});var Z=V((st,z)=>{var j=require("crypto"),{urlAlphabet:k}=H(),fe=128,N,_,J=e=>{!N||N.length<e?(N=Buffer.allocUnsafe(e*fe),j.randomFillSync(N),_=0):_+e>N.length&&(j.randomFillSync(N),_=0),_+=e},Q=e=>(J(e|=0),N.subarray(_-e,_)),W=(e,t,r)=>{let s=(2<<31-Math.clz32(e.length-1|1))-1,i=Math.ceil(1.6*s*t/e.length);return(u=t)=>{let E="";for(;;){let M=r(i),y=i;for(;y--;)if(E+=e[M[y]&s]||"",E.length===u)return E}}},Oe=(e,t=21)=>W(e,t,Q),ye=(e=21)=>{J(e|=0);let t="";for(let r=_-e;r<_;r++)t+=k[N[r]&63];return t};z.exports={nanoid:ye,customAlphabet:Oe,customRandom:W,urlAlphabet:k,random:Q}});var C,A,a,x,m,d,l,D,f=$(()=>{"use strict";C={DEV:"dev",STAGING:"staging",PROD:"prod"},A=process.env.STAGE||C.DEV,a={TOPICS:process.env.TOPICS_TABLE||`MicroQueue-Topics-${A}`,MESSAGES:process.env.MESSAGES_TABLE||`MicroQueue-Messages-${A}`,CONSUMER_GROUPS:process.env.CONSUMER_GROUPS_TABLE||`MicroQueue-ConsumerGroups-${A}`,OFFSETS:process.env.OFFSETS_TABLE||`MicroQueue-Offsets-${A}`},x={MESSAGES:process.env.MESSAGES_BUCKET||`microqueue-messages-${A}`,ARCHIVE:process.env.ARCHIVE_BUCKET||`microqueue-archive-${A}`},m={MAX_TOPIC_NAME_LENGTH:100,MAX_DESCRIPTION_LENGTH:500,MAX_MESSAGE_SIZE_BYTES:256*1024,MAX_METADATA_KEYS:10,MAX_METADATA_KEY_LENGTH:128,MAX_METADATA_VALUE_LENGTH:256,MAX_RETENTION_HOURS:7*24,DEFAULT_RETENTION_HOURS:24,MAX_MESSAGES_PER_CONSUME:100,DEFAULT_MESSAGES_PER_CONSUME:10,MAX_WAIT_TIME_SECONDS:20,DEFAULT_WAIT_TIME_SECONDS:0},d={INTERNAL_ERROR:"INTERNAL_ERROR",VALIDATION_ERROR:"VALIDATION_ERROR",RESOURCE_NOT_FOUND:"RESOURCE_NOT_FOUND",TOPIC_NOT_FOUND:"TOPIC_NOT_FOUND",TOPIC_ALREADY_EXISTS:"TOPIC_ALREADY_EXISTS",MESSAGE_NOT_FOUND:"MESSAGE_NOT_FOUND",MESSAGE_TOO_LARGE:"MESSAGE_TOO_LARGE",INVALID_MESSAGE_FORMAT:"INVALID_MESSAGE_FORMAT",CONSUMER_GROUP_NOT_FOUND:"CONSUMER_GROUP_NOT_FOUND",CONSUMER_GROUP_ALREADY_EXISTS:"CONSUMER_GROUP_ALREADY_EXISTS",RATE_LIMIT_EXCEEDED:"RATE_LIMIT_EXCEEDED",SERVICE_UNAVAILABLE:"SERVICE_UNAVAILABLE"},l={OK:200,CREATED:201,BAD_REQUEST:400,UNAUTHORIZED:401,FORBIDDEN:403,NOT_FOUND:404,CONFLICT:409,PAYLOAD_TOO_LARGE:413,UNPROCESSABLE_ENTITY:422,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500,SERVICE_UNAVAILABLE:503},D={JSON:"application/json",TEXT:"text/plain",XML:"application/xml",BINARY:"application/octet-stream"}});var ce={};K(ce,{config:()=>O,default:()=>Re});var Ce,ae,xe,O,Re,P=$(()=>{"use strict";f();Ce={serviceName:"MicroQueue-Mini",version:"1.0.0",dynamodb:{maxRetries:3,timeout:5e3},s3:{maxRetries:3,timeout:1e4},api:{corsOrigins:"*",rateLimit:{windowMs:60*1e3,max:100}},logging:{level:"info",format:"json"},topics:{maxTopicsPerAccount:100,defaultRetentionHours:m.DEFAULT_RETENTION_HOURS},messages:{maxSizeBytes:m.MAX_MESSAGE_SIZE_BYTES,batchSize:25},consumers:{defaultMaxMessages:m.DEFAULT_MESSAGES_PER_CONSUME,defaultWaitTimeSeconds:m.DEFAULT_WAIT_TIME_SECONDS}},ae={[C.DEV]:{logging:{level:"debug"},topics:{maxTopicsPerAccount:20}},[C.STAGING]:{logging:{level:"debug"},topics:{maxTopicsPerAccount:50}},[C.PROD]:{logging:{level:"info"},topics:{maxTopicsPerAccount:100},api:{rateLimit:{windowMs:60*1e3,max:200}}}},xe=ae[A]||ae[C.DEV],O={...Ce,...xe,env:A},Re=O});var tt={};K(tt,{handler:()=>et});module.exports=q(tt);var ee=Ne(Z());f();f();var p=class extends Error{constructor(r,s,i,u){super(s);this.code=r,this.statusCode=i,this.details=u,this.name="AppError",Error.captureStackTrace&&Error.captureStackTrace(this,p)}toResponse(){return{success:!1,error:{code:this.code,message:this.message,details:this.details}}}},n={internalError:(e="An internal server error occurred",t)=>new p(d.INTERNAL_ERROR,e,l.INTERNAL_SERVER_ERROR,t),validationError:(e="Validation error",t)=>new p(d.VALIDATION_ERROR,e,l.BAD_REQUEST,t),resourceNotFound:(e,t)=>new p(d.RESOURCE_NOT_FOUND,`${e} with id '${t}' not found`,l.NOT_FOUND),topicNotFound:e=>new p(d.TOPIC_NOT_FOUND,`Topic '${e}' not found`,l.NOT_FOUND),topicAlreadyExists:e=>new p(d.TOPIC_ALREADY_EXISTS,`Topic with name '${e}' already exists`,l.CONFLICT),messageNotFound:e=>new p(d.MESSAGE_NOT_FOUND,`Message '${e}' not found`,l.NOT_FOUND),messageTooLarge:(e,t)=>new p(d.MESSAGE_TOO_LARGE,`Message size (${e} bytes) exceeds maximum allowed size (${t} bytes)`,l.PAYLOAD_TOO_LARGE),consumerGroupNotFound:e=>new p(d.CONSUMER_GROUP_NOT_FOUND,`Consumer group '${e}' not found`,l.NOT_FOUND),consumerGroupAlreadyExists:(e,t)=>new p(d.CONSUMER_GROUP_ALREADY_EXISTS,`Consumer group with name '${e}' already exists for topic '${t}'`,l.CONFLICT),rateLimitExceeded:()=>new p(d.RATE_LIMIT_EXCEEDED,"Rate limit exceeded",l.TOO_MANY_REQUESTS),serviceUnavailable:(e="Service temporarily unavailable")=>new p(d.SERVICE_UNAVAILABLE,e,l.SERVICE_UNAVAILABLE)};var Me=(e,t=16)=>{let r=(0,ee.nanoid)(t);return e?`${e}_${r}`:r};var te=()=>Me("msg");var re=(e,t)=>{let r=Date.now();return`${e}/${r}/${t}`},oe=e=>{let t=typeof e=="string"?e:JSON.stringify(e),r=Buffer.byteLength(t,"utf8");if(r>m.MAX_MESSAGE_SIZE_BYTES)throw n.messageTooLarge(r,m.MAX_MESSAGE_SIZE_BYTES)},se=e=>{if(!e)return;let t=Object.keys(e);if(t.length>m.MAX_METADATA_KEYS)throw n.validationError(`Metadata cannot have more than ${m.MAX_METADATA_KEYS} keys`,{field:"metadata"});for(let r of t){if(r.length>m.MAX_METADATA_KEY_LENGTH)throw n.validationError(`Metadata key '${r}' exceeds maximum length of ${m.MAX_METADATA_KEY_LENGTH}`,{field:"metadata",key:r});let s=e[r];if(s&&s.length>m.MAX_METADATA_VALUE_LENGTH)throw n.validationError(`Metadata value for key '${r}' exceeds maximum length of ${m.MAX_METADATA_VALUE_LENGTH}`,{field:"metadata",key:r})}};var ne=(e,t)=>{if(t)return t;if(typeof e=="string")try{return JSON.parse(e),D.JSON}catch{return D.TEXT}return D.JSON},ie=(e,t)=>e+t*60*60*1e3;f();var ue=require("aws-sdk");P();var me={maxRetries:O.dynamodb.maxRetries,httpOptions:{timeout:O.dynamodb.timeout}};process.env.DYNAMODB_ENDPOINT&&(me.endpoint=process.env.DYNAMODB_ENDPOINT);var c=new ue.DynamoDB.DocumentClient(me);var Ee=require("aws-sdk");P();var F={maxRetries:O.s3.maxRetries,httpOptions:{timeout:O.s3.timeout}};process.env.S3_ENDPOINT&&(F.endpoint=process.env.S3_ENDPOINT,F.s3ForcePathStyle=!0);var b=new Ee.S3(F);f();var h=(P(),q(ce));var be={error:0,warn:1,info:2,debug:3},G=be[h.logging.level]||2,L=(e,t,r)=>{let s=new Date().toISOString(),i=process.env.AWS_REQUEST_ID||"-";if(h.logging.format==="json"){let E={timestamp:s,level:e,message:t,requestId:i,service:h.serviceName,version:h.version,env:h.env,...r?{data:r}:{}};return JSON.stringify(E)}let u=`[${s}] [${e.toUpperCase()}] [${i}] ${t}`;return r&&(u+=` ${JSON.stringify(r)}`),u},v=class{error(t,r){G>=0&&console.error(L("error",t,r))}warn(t,r){G>=1&&console.warn(L("warn",t,r))}info(t,r){G>=2&&console.info(L("info",t,r))}debug(t,r){G>=3&&console.debug(L("debug",t,r))}},o=new v,T=o;var he=async(e,t)=>{o.debug("Storing message",{messageId:e.messageId,topicId:e.topicId});try{return await b.putObject({Bucket:x.MESSAGES,Key:e.payloadKey,Body:t,ContentType:e.contentType}).promise(),await c.put({TableName:a.MESSAGES,Item:e}).promise(),e}catch(r){throw o.error("Error storing message",{error:r,message:e}),r}},Ie=async e=>{o.debug("Getting message by ID",{messageId:e});try{let t=await c.query({TableName:a.MESSAGES,IndexName:"MessageIdIndex",KeyConditionExpression:"messageId = :messageId",ExpressionAttributeValues:{":messageId":e},Limit:1}).promise();if(!t.Items||t.Items.length===0)throw n.messageNotFound(e);return t.Items[0]}catch(t){throw o.error("Error getting message by ID",{error:t,messageId:e}),t.code==="ResourceNotFoundException"?n.messageNotFound(e):t}},we=async(e,t,r)=>{o.debug("Getting messages",{topicId:e,fromSequence:t,limit:r});try{return(await c.query({TableName:a.MESSAGES,KeyConditionExpression:"topicId = :topicId AND sequenceNumber > :seq",ExpressionAttributeValues:{":topicId":e,":seq":t},Limit:r,ScanIndexForward:!0}).promise()).Items||[]}catch(s){throw o.error("Error getting messages",{error:s,topicId:e,fromSequence:t}),s}},De=async e=>{o.debug("Getting message payload",{payloadKey:e});try{return(await b.getObject({Bucket:x.MESSAGES,Key:e}).promise()).Body}catch(t){throw o.error("Error getting message payload",{error:t,payloadKey:e}),t.code==="NoSuchKey"?n.resourceNotFound("Message payload",e):t}},Pe=async e=>{o.debug("Deleting message",{messageId:e.messageId,topicId:e.topicId});try{await c.delete({TableName:a.MESSAGES,Key:{topicId:e.topicId,sequenceNumber:e.sequenceNumber}}).promise(),await b.copyObject({Bucket:x.ARCHIVE,Key:e.payloadKey,CopySource:`${x.MESSAGES}/${e.payloadKey}`}).promise(),await b.deleteObject({Bucket:x.MESSAGES,Key:e.payloadKey}).promise()}catch(t){throw o.error("Error deleting message",{error:t,message:e}),t}},Ge=async e=>{o.debug("Getting next sequence number",{topicId:e});try{let t=await c.query({TableName:a.MESSAGES,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e},Limit:1,ScanIndexForward:!1}).promise();return!t.Items||t.Items.length===0?1:t.Items[0].sequenceNumber+1}catch(t){throw o.error("Error getting next sequence number",{error:t,topicId:e}),t}},Le=async e=>{o.debug("Finding expired messages",{batchSize:e});try{let t=Math.floor(Date.now()/1e3);return(await c.scan({TableName:a.MESSAGES,FilterExpression:"expiresAt < :now",ExpressionAttributeValues:{":now":t},Limit:e}).promise()).Items||[]}catch(t){throw o.error("Error finding expired messages",{error:t}),t}},S={storeMessage:he,getMessageById:Ie,getMessages:we,getMessagePayload:De,deleteMessage:Pe,getNextSequenceNumber:Ge,findExpiredMessages:Le};f();var Ue=async e=>{o.debug("Creating topic",{topicId:e.topicId});try{return await c.put({TableName:a.TOPICS,Item:e,ConditionExpression:"attribute_not_exists(topicId)"}).promise(),e}catch(t){throw o.error("Error creating topic",{error:t,topic:e}),t.code==="ConditionalCheckFailedException"?n.topicAlreadyExists(e.name):t}},B=async e=>{o.debug("Getting topic",{topicId:e});try{let t=await c.get({TableName:a.TOPICS,Key:{topicId:e}}).promise();if(!t.Item)throw n.topicNotFound(e);return t.Item}catch(t){throw o.error("Error getting topic",{error:t,topicId:e}),t.code==="ResourceNotFoundException"?n.topicNotFound(e):t}},Fe=async e=>{o.debug("Getting topic by name",{name:e});try{let t=await c.scan({TableName:a.TOPICS,FilterExpression:"#name = :name",ExpressionAttributeNames:{"#name":"name"},ExpressionAttributeValues:{":name":e},Limit:1}).promise();return t.Items&&t.Items.length>0?t.Items[0]:null}catch(t){throw o.error("Error getting topic by name",{error:t,name:e}),t}},ve=async()=>{o.debug("Listing topics");try{return(await c.scan({TableName:a.TOPICS}).promise()).Items||[]}catch(e){throw o.error("Error listing topics",{error:e}),e}},Be=async e=>{o.debug("Deleting topic",{topicId:e});try{await c.delete({TableName:a.TOPICS,Key:{topicId:e},ConditionExpression:"attribute_exists(topicId)"}).promise()}catch(t){throw o.error("Error deleting topic",{error:t,topicId:e}),t.code==="ConditionalCheckFailedException"?n.topicNotFound(e):t}},$e=async(e,t)=>{o.debug("Incrementing topic message count",{topicId:e,timestamp:t});try{await c.update({TableName:a.TOPICS,Key:{topicId:e},UpdateExpression:"SET messageCount = messageCount + :inc, lastMessageTimestamp = :ts",ExpressionAttributeValues:{":inc":1,":ts":t},ConditionExpression:"attribute_exists(topicId)"}).promise()}catch(r){throw o.error("Error incrementing message count",{error:r,topicId:e}),r.code==="ConditionalCheckFailedException"?n.topicNotFound(e):r}},Ve=async(e,t)=>{o.debug("Updating topic",{topicId:e,updates:t});let r=[],s={},i={};if(Object.entries(t).forEach(([u,E])=>{E!==void 0&&(r.push(`#${u} = :${u}`),s[`#${u}`]=u,i[`:${u}`]=E)}),r.length===0)return B(e);try{return await c.update({TableName:a.TOPICS,Key:{topicId:e},UpdateExpression:`SET ${r.join(", ")}`,ExpressionAttributeNames:s,ExpressionAttributeValues:i,ConditionExpression:"attribute_exists(topicId)",ReturnValues:"NONE"}).promise(),B(e)}catch(u){throw o.error("Error updating topic",{error:u,topicId:e}),u.code==="ConditionalCheckFailedException"?n.topicNotFound(e):u}},U={createTopic:Ue,getTopic:B,getTopicByName:Fe,listTopics:ve,deleteTopic:Be,incrementMessageCount:$e,updateTopic:Ve};f();var Ke=async e=>{o.debug("Creating consumer group",{groupId:e.groupId,topicId:e.topicId});try{return await c.put({TableName:a.CONSUMER_GROUPS,Item:e,ConditionExpression:"attribute_not_exists(groupId) AND attribute_not_exists(topicId)"}).promise(),e}catch(t){throw o.error("Error creating consumer group",{error:t,consumerGroup:e}),t.code==="ConditionalCheckFailedException"?n.consumerGroupAlreadyExists(e.name,e.topicId):t}},Xe=async(e,t)=>{o.debug("Getting consumer group",{groupId:e,topicId:t});try{let r=await c.get({TableName:a.CONSUMER_GROUPS,Key:{groupId:e,topicId:t}}).promise();if(!r.Item)throw n.consumerGroupNotFound(e);return r.Item}catch(r){throw o.error("Error getting consumer group",{error:r,groupId:e,topicId:t}),r.code==="ResourceNotFoundException"?n.consumerGroupNotFound(e):r}},qe=async(e,t)=>{o.debug("Getting consumer group by name",{name:e,topicId:t});try{let r=await c.scan({TableName:a.CONSUMER_GROUPS,FilterExpression:"#name = :name AND topicId = :topicId",ExpressionAttributeNames:{"#name":"name"},ExpressionAttributeValues:{":name":e,":topicId":t},Limit:1}).promise();return r.Items&&r.Items.length>0?r.Items[0]:null}catch(r){throw o.error("Error getting consumer group by name",{error:r,name:e,topicId:t}),r}},Ye=async e=>{o.debug("Listing consumer groups",{topicId:e});try{return(await c.query({TableName:a.CONSUMER_GROUPS,KeyConditionExpression:"topicId = :topicId",ExpressionAttributeValues:{":topicId":e}}).promise()).Items||[]}catch(t){throw o.error("Error listing consumer groups",{error:t,topicId:e}),t}},He=async(e,t)=>{o.debug("Deleting consumer group",{groupId:e,topicId:t});try{await c.delete({TableName:a.CONSUMER_GROUPS,Key:{groupId:e,topicId:t},ConditionExpression:"attribute_exists(groupId) AND attribute_exists(topicId)"}).promise(),await c.delete({TableName:a.OFFSETS,Key:{groupId:e,topicId:t}}).promise()}catch(r){throw o.error("Error deleting consumer group",{error:r,groupId:e,topicId:t}),r.code==="ConditionalCheckFailedException"?n.consumerGroupNotFound(e):r}},je=async(e,t,r)=>{o.debug("Updating consumer group timestamp",{groupId:e,topicId:t,timestamp:r});try{await c.update({TableName:a.CONSUMER_GROUPS,Key:{groupId:e,topicId:t},UpdateExpression:"SET lastConsumedTimestamp = :ts",ExpressionAttributeValues:{":ts":r},ConditionExpression:"attribute_exists(groupId) AND attribute_exists(topicId)"}).promise()}catch(s){throw o.error("Error updating consumer group timestamp",{error:s,groupId:e,topicId:t}),s.code==="ConditionalCheckFailedException"?n.consumerGroupNotFound(e):s}},ke=async(e,t)=>{o.debug("Getting consumer offset",{groupId:e,topicId:t});try{let r=await c.get({TableName:a.OFFSETS,Key:{groupId:e,topicId:t}}).promise();return r.Item?r.Item:null}catch(r){throw o.error("Error getting consumer offset",{error:r,groupId:e,topicId:t}),r}},Je=async e=>{o.debug("Updating consumer offset",{groupId:e.groupId,topicId:e.topicId,sequenceNumber:e.lastSequenceNumber});try{await c.put({TableName:a.OFFSETS,Item:e}).promise()}catch(t){throw o.error("Error updating consumer offset",{error:t,offset:e}),t}},I={createConsumerGroup:Ke,getConsumerGroup:Xe,getConsumerGroupByName:qe,listConsumerGroups:Ye,deleteConsumerGroup:He,updateConsumerGroupTimestamp:je,getConsumerOffset:ke,updateConsumerOffset:Je};var Qe=async(e,t)=>{if(T.debug("Publishing message",{topicId:e}),!t.payload)throw n.validationError("Message payload is required");oe(t.payload),se(t.metadata);let r=await U.getTopic(e),s=await S.getNextSequenceNumber(e),i=ne(t.payload,t.contentType),u=te(),E=re(e,u),M=typeof t.payload=="string"?t.payload:JSON.stringify(t.payload),y=Buffer.byteLength(M,"utf8"),g=Date.now(),R=Math.floor(ie(g,r.retentionPeriodHours)/1e3),ge={messageId:u,topicId:e,timestamp:g,sequenceNumber:s,payloadKey:E,contentType:i,size:y,metadata:t.metadata,expiresAt:R};return await S.storeMessage(ge,M),await U.incrementMessageCount(e,g),{messageId:u,topicId:e,timestamp:g,sequenceNumber:s}},We=async(e,t)=>{if(T.debug("Consuming messages",{topicId:e,request:t}),!t.consumerGroupId)throw n.validationError("Consumer group ID is required");let r=t.maxMessages||m.DEFAULT_MESSAGES_PER_CONSUME;if(r<1)throw n.validationError("Max messages must be at least 1");if(r>m.MAX_MESSAGES_PER_CONSUME)throw n.validationError(`Max messages cannot exceed ${m.MAX_MESSAGES_PER_CONSUME}`);let s=t.waitTimeSeconds||m.DEFAULT_WAIT_TIME_SECONDS;if(s<0)throw n.validationError("Wait time cannot be negative");if(s>m.MAX_WAIT_TIME_SECONDS)throw n.validationError(`Wait time cannot exceed ${m.MAX_WAIT_TIME_SECONDS} seconds`);await U.getTopic(e),await I.getConsumerGroup(t.consumerGroupId,e);let i=0,u=await I.getConsumerOffset(t.consumerGroupId,e);u&&(i=u.lastSequenceNumber);let E=await S.getMessages(e,i,r);if(E.length===0&&s>0){let g=Date.now()+s*1e3;for(;E.length===0&&Date.now()<g;)await new Promise(R=>setTimeout(R,500)),E=await S.getMessages(e,i,r)}if(E.length===0)return{messages:[],nextSequenceNumber:i};let M=await Promise.all(E.map(async g=>{let R=await S.getMessagePayload(g.payloadKey);return{messageId:g.messageId,payload:R.toString("utf8"),timestamp:g.timestamp,sequenceNumber:g.sequenceNumber,contentType:g.contentType,metadata:g.metadata}})),y=E[E.length-1];return await I.updateConsumerOffset({groupId:t.consumerGroupId,topicId:e,lastSequenceNumber:y.sequenceNumber,lastConsumedTimestamp:Date.now()}),await I.updateConsumerGroupTimestamp(t.consumerGroupId,e,Date.now()),{messages:M,nextSequenceNumber:y.sequenceNumber+1}},ze=async e=>{T.debug("Getting message by ID",{messageId:e});let t=await S.getMessageById(e),r=await S.getMessagePayload(t.payloadKey);return{message:t,payload:r.toString("utf8")}},Ze=async e=>{T.debug("Cleaning up expired messages",{batchSize:e});let t=await S.findExpiredMessages(e);if(t.length===0)return 0;let r=0;for(let s of t)try{await S.deleteMessage(s),r++}catch(i){T.error("Error deleting expired message",{error:i,messageId:s.messageId})}return r},pe={publishMessage:Qe,consumeMessages:We,getMessageById:ze,cleanupExpiredMessages:Ze};var et=async(e,t)=>{T.info("Starting message cleanup",{event:e});try{let s=await pe.cleanupExpiredMessages(100);return T.info("Message cleanup completed",{deletedCount:s,batchSize:100}),{batchSize:100,deletedCount:s}}catch(r){throw T.error("Error during message cleanup",{error:r}),r}};0&&(module.exports={handler});
//# sourceMappingURL=cleanup.js.map
